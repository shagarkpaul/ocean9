<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-12-18T15:35:42 EST" name="Suite1" finished-at="2021-12-18T15:35:43 EST" duration-ms="535">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-12-18T15:35:42 EST" name="Nopackage" finished-at="2021-12-18T15:35:43 EST" duration-ms="535">
      <class name="runners.SmoketestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:42 EST" name="setUpClass" finished-at="2021-12-18T15:35:43 EST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@63f259c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["felling lucky - google search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[google search - Felling Lucky]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["felling lucky - google search"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[google search - Felling Lucky]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Simple searching"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[performe google search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Simple searching"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[performe google search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["searching suggested terms on google"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[google search for suggested terms]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-18T15:35:43 EST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["searching suggested terms on google"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[google search for suggested terms]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.SmoketestRunner@47d90b9e]" started-at="2021-12-18T15:35:43 EST" name="tearDownClass" finished-at="2021-12-18T15:35:43 EST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.SmoketestRunner -->
    </test> <!-- Nopackage -->
  </suite> <!-- Suite1 -->
</testng-results>
